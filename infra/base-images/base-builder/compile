#!/bin/bash -eu
# Copyright 2016 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
################################################################################

echo "---------------------------------------------------------------"

PROJECT=$1
COMMIT=$2
if ! [ -z "$COMMIT" ]; then
  pushd $SRC/$PROJECT >/dev/null

  echo "Checking out git history of $PROJECT .."
  if [ -f $(git rev-parse --git-dir)/shallow ]; then
    git pull --unshallow
  fi
  git checkout $COMMIT

  popd >/dev/null
fi

if [ -z "${SANITIZER_FLAGS-}" ]; then
  FLAGS_VAR="SANITIZER_FLAGS_${SANITIZER}"
  export SANITIZER_FLAGS=$(echo ${!FLAGS_VAR})
fi

# compile script might override environment, use . to call it.
#. compile_${FUZZING_ENGINE}

if [[ $SANITIZER_FLAGS = *sanitize=memory* ]]
then
  # Take all libraries from lib/msan
  # export CXXFLAGS_EXTRA="-L/usr/msan/lib $CXXFLAGS_EXTRA"
  cp -R /usr/msan/lib/* /usr/lib/
fi

export CFLAGS="$CFLAGS $SANITIZER_FLAGS $COVERAGE_FLAGS"
export CXXFLAGS="$CFLAGS $CXXFLAGS_EXTRA"

if [[ "$FUZZING_ENGINE" == aflgo ]]; then

  TMP_DIR=$(mktemp -d)
  COPY_CFLAGS=$CFLAGS
  COPY_CXXFLAGS=$CXXFLAGS

  ADDITIONAL="-targets=$TMP_DIR/BBtargets.txt -outdir=$TMP_DIR -flto -fuse-ld=gold -Wl,-plugin-opt=save-temps"

  export CC=$SRC/aflgo/afl-clang-fast
  export CXX=$SRC/aflgo/afl-clang-fast++
  export CFLAGS="$CFLAGS $ADDITIONAL"
  export CXXFLAGS="$CXXFLAGS $ADDITIONAL"

  chmod +x $SRC/showlinenum.awk

  pushd $SRC/$PROJECT > /dev/null

  sleep 0.5 #Workaround for "Text file busy"
  git diff -U0 HEAD^ HEAD | $SRC/showlinenum.awk show_header=0 path=1 | grep -e "\.[ch]:[0-9]*:+" -e "\.cpp:[0-9]*:+" -e "\.cc:[0-9]*:+" | cut -d+ -f1 | rev | cut -c2- | rev > $TMP_DIR/BBtargets.txt
  popd > /dev/null

  if [ $(cat $TMP_DIR/BBtargets.txt | wc -l) -eq 0 ]; then
    echo "No changed source code lines in commit $COMMIT of $PROJECT. Aborting.."
    exit 1
  fi

fi

echo "CC=$CC"
echo "CXX=$CXX"
echo "CFLAGS=$CFLAGS"
echo "CXXFLAGS=$CXXFLAGS"

echo "---------------------------------------------------------------"

BUILD_CMD="bash -eux $SRC/build.sh"
if [ "${BUILD_UID-0}" -ne "0" ]; then
  adduser -u $BUILD_UID --disabled-password --gecos '' builder
  chown -R builder $SRC $OUT $WORK
  su -c "$BUILD_CMD" builder
else
  $BUILD_CMD
fi


if [[ "$FUZZING_ENGINE" == aflgo ]]; then

  if ! [ -f $SRC/test.sh ]; then
    echo "#!/bin/bash" > $SRC/test.sh
    chmod +x $SRC/test.sh
  fi

  #FILTER BBnames and Fnames
  cat $TMP_DIR/BBnames.txt | rev | cut -d: -f2- | rev | sort | uniq > $TMP_DIR/BBnames2.txt && mv $TMP_DIR/BBnames2.txt $TMP_DIR/BBnames.txt
  cat $TMP_DIR/Fnames.txt | grep -v -e "^__" -e "^asan\." -e "^llvm\." -e "^sancov\." > $TMP_DIR/Fnames2.txt && mv $TMP_DIR/Fnames2.txt $TMP_DIR/Fnames.txt

  echo "---------------------------------------------------------------"
  $SRC/aflgo/scripts/genDistance.sh $OUT $SRC/test.sh $TMP_DIR
  cp $TMP_DIR/distance.cfg.txt $OUT

  CFLAGS="$COPY_CFLAGS -distance=$OUT/distance.cfg.txt"
  CXXFLAGS="$COPY_CXXFLAGS -distance=$OUT/distance.cfg.txt"

  if [ "${BUILD_UID-0}" -ne "0" ]; then
    su -c "$BUILD_CMD" builder
  else
    $BUILD_CMD
  fi
fi
